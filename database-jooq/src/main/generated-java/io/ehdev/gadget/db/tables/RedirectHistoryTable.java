/*
 * This file is generated by jOOQ.
 */
package io.ehdev.gadget.db.tables;


import io.ehdev.gadget.db.Gadget;
import io.ehdev.gadget.db.Indexes;
import io.ehdev.gadget.db.Keys;
import io.ehdev.gadget.db.converter.TimestampConverter;
import io.ehdev.gadget.db.tables.records.RedirectHistoryRecord;

import java.time.Instant;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedirectHistoryTable extends TableImpl<RedirectHistoryRecord> {

    private static final long serialVersionUID = -1661463353;

    /**
     * The reference instance of <code>gadget.redirect_history</code>
     */
    public static final RedirectHistoryTable REDIRECT_HISTORY = new RedirectHistoryTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RedirectHistoryRecord> getRecordType() {
        return RedirectHistoryRecord.class;
    }

    /**
     * The column <code>gadget.redirect_history.redirect_history_id</code>.
     */
    public final TableField<RedirectHistoryRecord, Long> REDIRECT_HISTORY_ID = createField("redirect_history_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gadget.redirect_history.alias</code>.
     */
    public final TableField<RedirectHistoryRecord, String> ALIAS = createField("alias", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>gadget.redirect_history.variables</code>.
     */
    public final TableField<RedirectHistoryRecord, String> VARIABLES = createField("variables", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>gadget.redirect_history.destination</code>.
     */
    public final TableField<RedirectHistoryRecord, String> DESTINATION = createField("destination", org.jooq.impl.SQLDataType.VARCHAR(4096).nullable(false), this, "");

    /**
     * The column <code>gadget.redirect_history.user</code>.
     */
    public final TableField<RedirectHistoryRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>gadget.redirect_history.created_at</code>.
     */
    public final TableField<RedirectHistoryRecord, Instant> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampConverter());

    /**
     * The column <code>gadget.redirect_history.deleted_at</code>.
     */
    public final TableField<RedirectHistoryRecord, Instant> DELETED_AT = createField("deleted_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampConverter());

    /**
     * Create a <code>gadget.redirect_history</code> table reference
     */
    public RedirectHistoryTable() {
        this(DSL.name("redirect_history"), null);
    }

    /**
     * Create an aliased <code>gadget.redirect_history</code> table reference
     */
    public RedirectHistoryTable(String alias) {
        this(DSL.name(alias), REDIRECT_HISTORY);
    }

    /**
     * Create an aliased <code>gadget.redirect_history</code> table reference
     */
    public RedirectHistoryTable(Name alias) {
        this(alias, REDIRECT_HISTORY);
    }

    private RedirectHistoryTable(Name alias, Table<RedirectHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private RedirectHistoryTable(Name alias, Table<RedirectHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RedirectHistoryTable(Table<O> child, ForeignKey<O, RedirectHistoryRecord> key) {
        super(child, key, REDIRECT_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gadget.GADGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REDIRECT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RedirectHistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_REDIRECT_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RedirectHistoryRecord> getPrimaryKey() {
        return Keys.KEY_REDIRECT_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RedirectHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<RedirectHistoryRecord>>asList(Keys.KEY_REDIRECT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectHistoryTable as(String alias) {
        return new RedirectHistoryTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectHistoryTable as(Name alias) {
        return new RedirectHistoryTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RedirectHistoryTable rename(String name) {
        return new RedirectHistoryTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RedirectHistoryTable rename(Name name) {
        return new RedirectHistoryTable(name, null);
    }
}
